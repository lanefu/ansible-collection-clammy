---
- name: Debian(legacy) | Installing Pre-Reqs
  ansible.builtin.apt:
    name: ["iproute", "libc-ares2"]
    state: present
  become: true
  when: >
    (ansible_distribution == "Debian" and
    ansible_distribution_version|int < 10) or
    (ansible_distribution == "Ubuntu" and
    ansible_distribution_version < "18.04")

- name: Debian(legacy) | Installing Pre-Reqs Ubuntu 18+
  ansible.builtin.apt:
    name: ["iproute2", "libc-ares2", "libcap2", "libjson-c3", "logrotate"]
    state: present
  become: true
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_lsb.release is version ('18.04', '>=')

- name: Debian(legacy) | Set url on frr between version 4 and 6.0.0
  ansible.builtin.set_fact:
    frr_url_part: "-1."
    frr_url_part_2: "+1_"
  when:
    - frr_version > "4"
    - frr_version <= "6.0"

- name: Debian(legacy) | Set url on frr greater than version 6.0.0
  ansible.builtin.set_fact:
    frr_url_part: "-0."
    frr_url_part_2: ".1_"
    frr_url_part_3: ".1"
  when:
    - frr_version > "6.0"

- name: Debian(legacy) | Installing FRR package
  ansible.builtin.apt:
    deb: "{{ frr_package_url }}/frr_{{ frr_version }}{{ frr_url_part | default('-1_') }}\
          {{ ansible_distribution | lower }}{{ ansible_distribution_version }}\
          {{ frr_url_part_2 | default('.1_') }}amd64.deb"
    state: present
  become: true
  when:
    - ansible_distribution == "Debian"
    - ansible_machine == 'x86_64'

- name: Debian(legacy) | Set FRR package (Arm)
  ansible.builtin.set_fact:
    frr_debs: [
      "{{ frr_package_url }}/frr_{{ frr_version }}{{ frr_url_part | default('-1_') }}\
       {{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}\
       {{ frr_url_part_2 | default('.1_') }}armhf.deb",
      ]
    state: present
  become: true
  when:
    - ansible_distribution == "Debian"
    - ansible_machine == 'armv7l'

- name: Debian(legacy) | Set FRR package (Ubuntu)
  ansible.builtin.set_fact:
    frr_debs: [
      "{{ frr_package_url }}/frr_{{ frr_version }}{{ frr_url_part | default('-1_') }}\
       {{ ansible_distribution | lower }}{{ ansible_distribution_version }}\
       {{ frr_url_part_2 | default('.1_') }}amd64.deb",
      ]
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_machine == 'x86_64'

- name: Debian(legacy) | Set FRR package (Arm & Ubuntu)
  ansible.builtin.set_fact:
    frr_debs: [
      "{{ frr_package_url }}/frr_{{ frr_version }}{{ frr_url_part | default('-1_') }}\
       {{ ansible_distribution | lower }}{{ ansible_distribution_version }}\
       {{ frr_url_part_2 | default('.1_') }}armhf.deb",
      ]
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_machine == 'armv7l'

- name: Debian(legacy) | Set python FRR tools package
  ansible.builtin.set_fact:
    frr_package_deb: "{{ frr_package_url }}/frr-pythontools_{{ frr_version }}{{ frr_url_part }}\
                      {{ ansible_distribution | lower }}{{ ansible_distribution_version }}\
                      {{ frr_url_part_3 | default('+1') }}_all.deb"

- name: Debian(legacy) | Set final package list for install
  ansible.builtin.set_fact:
    frr_debs: "{{ frr_debs }} + [ '{{ frr_package_deb }}' ]"

- name: Debian(legacy) | Install python-ipaddr
  ansible.builtin.package:
    name: python-ipaddr
    state: present
  become: true

- name: Debian(legacy) | Remove Quagga
  ansible.builtin.package:
    name: quagga
    state: absent
  become: true

- name: Debian(legacy) | Fetch FRR version
  ansible.builtin.shell:
    cmd: "dpkg -l | grep frr | head -1 | awk '{print $3}' | sed 's/~.*//' | sed -r 's/-/./g' | cut -c1-5"
  ignore_errors: true
  changed_when: false
  check_mode: no
  register: _frr_version

- name: Debian(legacy) | Doing things for Ubuntu-18.04
  when: ansible_lsb.release is version ('18.04', '>=')
  block:
    - name: Debian(legacy) | Create our download directory
      ansible.builtin.file:
        path: /tmp/frr/{{ frr_version }}/
        state: directory
        mode: 0600
      changed_when: false

    - name: Debian(legacy) | Download FRR package
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: /tmp/frr/{{ frr_version }}/
        mode: 0600
      with_items: "{{ frr_debs }}"

    - name: Debian(legacy) | Installing FRR and netplan apply to fix connectivity
      ansible.builtin.shell:
        cmd: |
          dpkg --force-confnew -i /tmp/frr/{{ frr_version }}/frr*.deb
          netplan apply 2> /dev/null || { echo >&2 "no netplan installed";}
      args:
        executable: "/bin/bash"
      become: true
      changed_when: false
      when: _frr_version.stdout != frr_version
      notify:
        - restart frr
        - start frr

- name: Debian(legacy) | Do things for not Ubuntu-18.04
  when: ansible_lsb.release is version ('18.04', '<')
  block:
    - name: Installing FRR {{ frr_version }}
      ansible.builtin.apt:
        deb: "{{ item }}"
        state: present
        force: true
      become: true
      with_items: "{{ frr_debs }}"
      notify:
        - restart frr
      when: _frr_version.stdout != frr_version

- name: Debian(legacy) | Stat default config
  ansible.builtin.stat:
    path: /etc/default/frr
  register: conf_stat
  when:
    - frr_version > "6.0"

- name: Debian(legacy) | Remove old /etc/default/frr
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  notify:
    - restart frr
    - start frr
  when:
    - frr_version > "6.0"
  with_items:
    - /etc/default/frr
